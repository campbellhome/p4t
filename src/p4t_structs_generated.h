// Copyright (c) 2012-2019 Matt Campbell
// MIT license (see License.txt)

// AUTOGENERATED FILE - DO NOT EDIT

// clang-format off

#pragma once

#include "bb_types.h"

#if defined(__cplusplus)
extern "C" {
#endif

struct sb_s;
struct sbs_s;
struct sdictEntry_s;
struct sdict_s;
struct uuid_node_s;
struct fontConfig_s;
struct fontConfigs_s;
struct tagPOINT;
struct tagRECT;
struct tagWINDOWPLACEMENT;
struct tag_uiChangelistConfig;
struct tag_uiChangesetConfig;
struct diffConfig_s;
struct tag_appTypeConfig;
struct tag_p4Config;
struct tag_changelistConfig;
struct tag_changesetConfig;
struct tag_tabConfig;
struct tag_tabsConfig;
struct tag_updatesConfig;
struct config_s;
struct updateConfig_s;
struct site_config_s;

typedef struct sb_s sb_t;
typedef struct sbs_s sbs_t;
typedef struct sdictEntry_s sdictEntry_t;
typedef struct sdict_s sdict_t;
typedef struct uuid_node_s uuid_node_t;
typedef struct fontConfig_s fontConfig_t;
typedef struct fontConfigs_s fontConfigs_t;
typedef struct tagPOINT POINT;
typedef struct tagRECT RECT;
typedef struct tagWINDOWPLACEMENT WINDOWPLACEMENT;
typedef struct tag_uiChangelistConfig uiChangelistConfig;
typedef struct tag_uiChangesetConfig uiChangesetConfig;
typedef struct diffConfig_s diffConfig_t;
typedef struct tag_appTypeConfig appTypeConfig;
typedef struct tag_p4Config p4Config;
typedef struct tag_changelistConfig changelistConfig;
typedef struct tag_changesetConfig changesetConfig;
typedef struct tag_tabConfig tabConfig;
typedef struct tag_tabsConfig tabsConfig;
typedef struct tag_updatesConfig updatesConfig;
typedef struct config_s config_t;
typedef struct updateConfig_s updateConfig_t;
typedef struct site_config_s site_config_t;

void sb_reset_from_loc(const char *file, int line, sb_t *val);
void sbs_reset_from_loc(const char *file, int line, sbs_t *val);
void sdictEntry_reset(sdictEntry_t *val);
void sdict_reset(sdict_t *val);
void uuid_node_reset(uuid_node_t *val);
void fontConfig_reset(fontConfig_t *val);
void fontConfigs_reset(fontConfigs_t *val);
void POINT_reset(POINT *val);
void RECT_reset(RECT *val);
void WINDOWPLACEMENT_reset(WINDOWPLACEMENT *val);
void uiChangelistConfig_reset(uiChangelistConfig *val);
void uiChangesetConfig_reset(uiChangesetConfig *val);
void diffConfig_reset(diffConfig_t *val);
void appTypeConfig_reset(appTypeConfig *val);
void p4Config_reset(p4Config *val);
void changelistConfig_reset(changelistConfig *val);
void changesetConfig_reset(changesetConfig *val);
void tabConfig_reset(tabConfig *val);
void tabsConfig_reset(tabsConfig *val);
void updatesConfig_reset(updatesConfig *val);
void config_reset(config_t *val);
void updateConfig_reset(updateConfig_t *val);
void site_config_reset(site_config_t *val);

#if !defined(__cplusplus) || defined(DECLARE_sb_clone)
sb_t sb_clone_from_loc(const char *file, int line, const sb_t *src);
#endif
#if !defined(__cplusplus) || defined(DECLARE_sbs_clone)
sbs_t sbs_clone_from_loc(const char *file, int line, const sbs_t *src);
#endif
#if !defined(__cplusplus) || defined(DECLARE_sdictEntry_clone)
sdictEntry_t sdictEntry_clone(const sdictEntry_t *src);
#endif
#if !defined(__cplusplus) || defined(DECLARE_sdict_clone)
sdict_t sdict_clone(const sdict_t *src);
#endif
#if !defined(__cplusplus) || defined(DECLARE_uuid_node_clone)
uuid_node_t uuid_node_clone(const uuid_node_t *src);
#endif
#if !defined(__cplusplus) || defined(DECLARE_fontConfig_clone)
fontConfig_t fontConfig_clone(const fontConfig_t *src);
#endif
#if !defined(__cplusplus) || defined(DECLARE_fontConfigs_clone)
fontConfigs_t fontConfigs_clone(const fontConfigs_t *src);
#endif
#if !defined(__cplusplus) || defined(DECLARE_POINT_clone)
POINT POINT_clone(const POINT *src);
#endif
#if !defined(__cplusplus) || defined(DECLARE_RECT_clone)
RECT RECT_clone(const RECT *src);
#endif
#if !defined(__cplusplus) || defined(DECLARE_WINDOWPLACEMENT_clone)
WINDOWPLACEMENT WINDOWPLACEMENT_clone(const WINDOWPLACEMENT *src);
#endif
#if !defined(__cplusplus) || defined(DECLARE_uiChangelistConfig_clone)
uiChangelistConfig uiChangelistConfig_clone(const uiChangelistConfig *src);
#endif
#if !defined(__cplusplus) || defined(DECLARE_uiChangesetConfig_clone)
uiChangesetConfig uiChangesetConfig_clone(const uiChangesetConfig *src);
#endif
#if !defined(__cplusplus) || defined(DECLARE_diffConfig_clone)
diffConfig_t diffConfig_clone(const diffConfig_t *src);
#endif
#if !defined(__cplusplus) || defined(DECLARE_appTypeConfig_clone)
appTypeConfig appTypeConfig_clone(const appTypeConfig *src);
#endif
#if !defined(__cplusplus) || defined(DECLARE_p4Config_clone)
p4Config p4Config_clone(const p4Config *src);
#endif
#if !defined(__cplusplus) || defined(DECLARE_changelistConfig_clone)
changelistConfig changelistConfig_clone(const changelistConfig *src);
#endif
#if !defined(__cplusplus) || defined(DECLARE_changesetConfig_clone)
changesetConfig changesetConfig_clone(const changesetConfig *src);
#endif
#if !defined(__cplusplus) || defined(DECLARE_tabConfig_clone)
tabConfig tabConfig_clone(const tabConfig *src);
#endif
#if !defined(__cplusplus) || defined(DECLARE_tabsConfig_clone)
tabsConfig tabsConfig_clone(const tabsConfig *src);
#endif
#if !defined(__cplusplus) || defined(DECLARE_updatesConfig_clone)
updatesConfig updatesConfig_clone(const updatesConfig *src);
#endif
#if !defined(__cplusplus) || defined(DECLARE_config_clone)
config_t config_clone(const config_t *src);
#endif
#if !defined(__cplusplus) || defined(DECLARE_updateConfig_clone)
updateConfig_t updateConfig_clone(const updateConfig_t *src);
#endif
#if !defined(__cplusplus) || defined(DECLARE_site_config_clone)
site_config_t site_config_clone(const site_config_t *src);
#endif

#if defined(__cplusplus)
} // extern "C"
#endif

#if !defined(sb_reset)
#define sb_reset(var) sb_reset_from_loc(__FILE__, __LINE__, var);
#endif
#if !defined(sbs_reset)
#define sbs_reset(var) sbs_reset_from_loc(__FILE__, __LINE__, var);
#endif

#if !defined(sb_clone)
#define sb_clone(var) sb_clone_from_loc(__FILE__, __LINE__, var);
#endif
#if !defined(sbs_clone)
#define sbs_clone(var) sbs_clone_from_loc(__FILE__, __LINE__, var);
#endif
